[gd_resource type="VisualShader" load_steps=22 format=2]

[ext_resource path="res://PixelLevel/Level.png" type="Texture" id=1]

[sub_resource type="VisualShaderNodeScalarUniform" id=1]
uniform_name = "frames"

[sub_resource type="VisualShaderNodeScalarUniform" id=2]
uniform_name = "fps"

[sub_resource type="VisualShaderNodeScalarOp" id=3]
default_input_values = [ 0, 1.0, 1, 0.0 ]
operator = 3

[sub_resource type="VisualShaderNodeScalarOp" id=4]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=5]
operator = 4

[sub_resource type="VisualShaderNodeScalarOp" id=6]
operator = 3

[sub_resource type="VisualShaderNodeScalarFunc" id=7]
function = 14

[sub_resource type="VisualShaderNodeInput" id=8]
input_name = "time"

[sub_resource type="VisualShaderNodeInput" id=10]
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarOp" id=11]
default_input_values = [ 0, 0.0, 1, 0.0345 ]
operator = 3

[sub_resource type="VisualShaderNodeScalarOp" id=16]

[sub_resource type="VisualShaderNodeScalarOp" id=17]
default_input_values = [ 0, 0.0, 1, 6.0 ]
operator = 4

[sub_resource type="VisualShaderNodeInput" id=18]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorDecompose" id=19]

[sub_resource type="VisualShaderNodeScalarOp" id=20]
default_input_values = [ 0, 0.6555, 1, 0.0 ]
operator = 1

[sub_resource type="VisualShaderNodeVectorDecompose" id=21]

[sub_resource type="VisualShaderNodeScalarOp" id=22]
default_input_values = [ 0, 0.0, 1, 0.6555 ]
operator = 1

[sub_resource type="VisualShaderNodeVectorOp" id=13]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.0345, 0, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=14]

[sub_resource type="VisualShaderNodeTexture" id=15]
texture = ExtResource( 1 )

[resource]
code = "shader_type canvas_item;
uniform float frames;
uniform float fps;
uniform sampler2D tex_frg_9;



void vertex() {
// Output:0

}

void fragment() {
// Input:29
	vec3 n_out29p0 = vec3(UV, 0.0);

// Input:2
	float n_out2p0 = TIME;

// ScalarUniform:10
	float n_out10p0 = frames;

// ScalarUniform:13
	float n_out13p0 = fps;

// ScalarOp:14
	float n_in14p0 = 1.00000;
	float n_out14p0 = n_in14p0 / n_out13p0;

// ScalarOp:15
	float n_out15p0 = n_out10p0 * n_out14p0;

// ScalarOp:16
	float n_out16p0 = mod(n_out2p0, n_out15p0);

// ScalarOp:17
	float n_out17p0 = n_out16p0 / n_out14p0;

// ScalarFunc:18
	float n_out18p0 = floor(n_out17p0);

// VectorOp:7
	vec3 n_in7p1 = vec3(0.03450, 0.00000, 0.00000);
	vec3 n_out7p0 = vec3(n_out18p0) * n_in7p1;

// VectorOp:8
	vec3 n_out8p0 = n_out29p0 + n_out7p0;

// Texture:9
	vec4 tex_frg_9_read = texture(tex_frg_9, n_out8p0.xy);
	vec3 n_out9p0 = tex_frg_9_read.rgb;
	float n_out9p1 = tex_frg_9_read.a;

// Output:0
	COLOR.rgb = n_out9p0;
	COLOR.a = n_out9p1;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 52, -209 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 1080, 360 )
nodes/fragment/2/node = SubResource( 8 )
nodes/fragment/2/position = Vector2( 280, -220 )
nodes/fragment/7/node = SubResource( 13 )
nodes/fragment/7/position = Vector2( 720, 280 )
nodes/fragment/8/node = SubResource( 14 )
nodes/fragment/8/position = Vector2( 900, 160 )
nodes/fragment/9/node = SubResource( 15 )
nodes/fragment/9/position = Vector2( 900, 280 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( 80, -160 )
nodes/fragment/13/node = SubResource( 2 )
nodes/fragment/13/position = Vector2( -120, -40 )
nodes/fragment/14/node = SubResource( 3 )
nodes/fragment/14/position = Vector2( 80, -80 )
nodes/fragment/15/node = SubResource( 4 )
nodes/fragment/15/position = Vector2( 280, -140 )
nodes/fragment/16/node = SubResource( 5 )
nodes/fragment/16/position = Vector2( 460, -180 )
nodes/fragment/17/node = SubResource( 6 )
nodes/fragment/17/position = Vector2( 640, -100 )
nodes/fragment/18/node = SubResource( 7 )
nodes/fragment/18/position = Vector2( 820, -60 )
nodes/fragment/21/node = SubResource( 10 )
nodes/fragment/21/position = Vector2( -520, 380 )
nodes/fragment/24/node = SubResource( 11 )
nodes/fragment/24/position = Vector2( 80, 340 )
nodes/fragment/25/node = SubResource( 16 )
nodes/fragment/25/position = Vector2( 280, 320 )
nodes/fragment/26/node = SubResource( 17 )
nodes/fragment/26/position = Vector2( 460, 320 )
nodes/fragment/29/node = SubResource( 18 )
nodes/fragment/29/position = Vector2( 240, 120 )
nodes/fragment/30/node = SubResource( 19 )
nodes/fragment/30/position = Vector2( -360, 380 )
nodes/fragment/31/node = SubResource( 20 )
nodes/fragment/31/position = Vector2( -140, 340 )
nodes/fragment/32/node = SubResource( 21 )
nodes/fragment/32/position = Vector2( 420, 100 )
nodes/fragment/33/node = SubResource( 22 )
nodes/fragment/33/position = Vector2( 660, 140 )
nodes/fragment/connections = PoolIntArray( 7, 0, 8, 1, 8, 0, 9, 0, 9, 0, 0, 0, 9, 1, 0, 1, 13, 0, 14, 1, 15, 0, 16, 1, 14, 0, 17, 1, 17, 0, 18, 0, 2, 0, 16, 0, 16, 0, 17, 0, 18, 0, 25, 0, 25, 0, 26, 0, 21, 0, 30, 0, 30, 0, 31, 1, 31, 0, 24, 0, 24, 0, 25, 1, 29, 0, 32, 0, 32, 0, 33, 0, 10, 0, 15, 0, 14, 0, 15, 1, 29, 0, 8, 0, 18, 0, 7, 0 )
