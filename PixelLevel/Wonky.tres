[gd_resource type="VisualShader" load_steps=24 format=2]

[ext_resource path="res://Wonky/Level.png" type="Texture" id=1]

[sub_resource type="VisualShaderNodeScalarUniform" id=1]
uniform_name = "FrameCount"

[sub_resource type="VisualShaderNodeScalarUniform" id=2]
uniform_name = "FrameLength"

[sub_resource type="VisualShaderNodeScalarOp" id=3]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=4]
operator = 4

[sub_resource type="VisualShaderNodeScalarOp" id=5]
operator = 3

[sub_resource type="VisualShaderNodeScalarFunc" id=6]
function = 14

[sub_resource type="VisualShaderNodeInput" id=7]
input_name = "time"

[sub_resource type="VisualShaderNodeInput" id=8]
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarOp" id=9]
operator = 3

[sub_resource type="VisualShaderNodeScalarOp" id=10]

[sub_resource type="VisualShaderNodeScalarOp" id=11]
operator = 4

[sub_resource type="VisualShaderNodeVectorDecompose" id=12]

[sub_resource type="VisualShaderNodeScalarFunc" id=13]
function = 16

[sub_resource type="VisualShaderNodeScalarUniform" id=14]
uniform_name = "FrameWidth"

[sub_resource type="VisualShaderNodeScalarOp" id=15]
operator = 1

[sub_resource type="VisualShaderNodeScalarOp" id=16]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=17]

[sub_resource type="VisualShaderNodeVectorCompose" id=18]

[sub_resource type="VisualShaderNodeTexture" id=19]
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeVectorCompose" id=20]

[sub_resource type="VisualShaderNodeVectorOp" id=21]
operator = 1

[sub_resource type="VisualShaderNodeScalarUniform" id=22]
uniform_name = "FrameStart"

[resource]
code = "shader_type canvas_item;
uniform float FrameStart;
uniform float FrameWidth;
uniform float FrameCount;
uniform float FrameLength;
uniform sampler2D tex_frg_53;



void vertex() {
// Output:0

}

void fragment() {
// Input:21
	vec3 n_out21p0 = vec3(UV, 0.0);

// ScalarUniform:58
	float n_out58p0 = FrameStart;

// VectorCompose:55
	float n_in55p1 = 0.00000;
	float n_in55p2 = 0.00000;
	vec3 n_out55p0 = vec3(n_out58p0, n_in55p1, n_in55p2);

// VectorOp:56
	vec3 n_out56p0 = n_out21p0 - n_out55p0;

// VectorDecompose:30
	float n_out30p0 = n_out56p0.x;
	float n_out30p1 = n_out56p0.y;
	float n_out30p2 = n_out56p0.z;

// ScalarUniform:48
	float n_out48p0 = FrameWidth;

// ScalarOp:24
	float n_out24p0 = n_out30p0 / n_out48p0;

// ScalarFunc:35
	float n_out35p0 = ceil(n_out24p0);

// Input:2
	float n_out2p0 = TIME;

// ScalarUniform:10
	float n_out10p0 = FrameCount;

// ScalarUniform:13
	float n_out13p0 = FrameLength;

// ScalarOp:15
	float n_out15p0 = n_out10p0 * n_out13p0;

// ScalarOp:16
	float n_out16p0 = mod(n_out2p0, n_out15p0);

// ScalarOp:17
	float n_out17p0 = n_out16p0 / n_out13p0;

// ScalarFunc:18
	float n_out18p0 = floor(n_out17p0);

// ScalarOp:25
	float n_out25p0 = n_out35p0 + n_out18p0;

// ScalarOp:26
	float n_out26p0 = mod(n_out25p0, n_out10p0);

// ScalarOp:49
	float n_out49p0 = n_out26p0 - n_out35p0;

// ScalarOp:50
	float n_out50p0 = n_out49p0 * n_out48p0;

// VectorCompose:52
	float n_in52p1 = 0.00000;
	float n_in52p2 = 0.00000;
	vec3 n_out52p0 = vec3(n_out50p0, n_in52p1, n_in52p2);

// VectorOp:51
	vec3 n_out51p0 = n_out21p0 + n_out52p0;

// Texture:53
	vec4 tex_frg_53_read = texture(tex_frg_53, n_out51p0.xy);
	vec3 n_out53p0 = tex_frg_53_read.rgb;
	float n_out53p1 = tex_frg_53_read.a;

// Output:0
	COLOR.rgb = n_out53p0;
	COLOR.a = n_out53p1;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 133, -74.5 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 1840, 520 )
nodes/fragment/2/node = SubResource( 7 )
nodes/fragment/2/position = Vector2( 400, 440 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( 200, 480 )
nodes/fragment/13/node = SubResource( 2 )
nodes/fragment/13/position = Vector2( 180, 600 )
nodes/fragment/15/node = SubResource( 3 )
nodes/fragment/15/position = Vector2( 400, 520 )
nodes/fragment/16/node = SubResource( 4 )
nodes/fragment/16/position = Vector2( 600, 480 )
nodes/fragment/17/node = SubResource( 5 )
nodes/fragment/17/position = Vector2( 800, 540 )
nodes/fragment/18/node = SubResource( 6 )
nodes/fragment/18/position = Vector2( 980, 540 )
nodes/fragment/21/node = SubResource( 8 )
nodes/fragment/21/position = Vector2( 220, 340 )
nodes/fragment/24/node = SubResource( 9 )
nodes/fragment/24/position = Vector2( 800, 220 )
nodes/fragment/25/node = SubResource( 10 )
nodes/fragment/25/position = Vector2( 1000, 360 )
nodes/fragment/26/node = SubResource( 11 )
nodes/fragment/26/position = Vector2( 1200, 400 )
nodes/fragment/30/node = SubResource( 12 )
nodes/fragment/30/position = Vector2( 580, 260 )
nodes/fragment/35/node = SubResource( 13 )
nodes/fragment/35/position = Vector2( 980, 240 )
nodes/fragment/48/node = SubResource( 14 )
nodes/fragment/48/position = Vector2( 600, 400 )
nodes/fragment/49/node = SubResource( 15 )
nodes/fragment/49/position = Vector2( 1240, 260 )
nodes/fragment/50/node = SubResource( 16 )
nodes/fragment/50/position = Vector2( 1420, 260 )
nodes/fragment/51/node = SubResource( 17 )
nodes/fragment/51/position = Vector2( 1640, 320 )
nodes/fragment/52/node = SubResource( 18 )
nodes/fragment/52/position = Vector2( 1440, 400 )
nodes/fragment/53/node = SubResource( 19 )
nodes/fragment/53/position = Vector2( 1660, 440 )
nodes/fragment/55/node = SubResource( 20 )
nodes/fragment/55/position = Vector2( 180, 200 )
nodes/fragment/56/node = SubResource( 21 )
nodes/fragment/56/position = Vector2( 400, 240 )
nodes/fragment/58/node = SubResource( 22 )
nodes/fragment/58/position = Vector2( -20, 200 )
nodes/fragment/connections = PoolIntArray( 17, 0, 18, 0, 25, 0, 26, 0, 10, 0, 26, 1, 24, 0, 35, 0, 35, 0, 25, 0, 17, 0, 18, 0, 25, 0, 26, 0, 10, 0, 26, 1, 24, 0, 35, 0, 35, 0, 25, 0, 16, 0, 17, 0, 2, 0, 16, 0, 15, 0, 16, 1, 10, 0, 15, 0, 18, 0, 25, 1, 30, 0, 24, 0, 13, 0, 15, 1, 13, 0, 17, 1, 48, 0, 24, 1, 48, 0, 50, 1, 49, 0, 50, 0, 21, 0, 51, 0, 50, 0, 52, 0, 26, 0, 49, 0, 35, 0, 49, 1, 52, 0, 51, 1, 51, 0, 53, 0, 53, 0, 0, 0, 53, 1, 0, 1, 55, 0, 56, 1, 21, 0, 56, 0, 56, 0, 30, 0, 58, 0, 55, 0 )
